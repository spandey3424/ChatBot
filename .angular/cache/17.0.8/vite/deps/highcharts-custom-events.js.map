{
  "version": 3,
  "sources": ["../../../../../node_modules/highcharts-custom-events/js/customEvents.js"],
  "sourcesContent": ["/**\n* Custom events v3.0.10 (2020-12-21)\n*\n* (c) 2012-2020 Black Label\n*\n* License: Creative Commons Attribution (CC)\n*/\n\n/* global Highcharts setTimeout clearTimeout module:true */\n/* eslint no-loop-func: 0 */\n\n/**\n * @namespace customEvents\n **/\n\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts-custom-events', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(Highcharts);\n    }\n}(function (HC) {\n\n\t/* global Highcharts :true, window */\n\n\t'use strict';\n\n\tvar UNDEFINED,\n\t\tDBLCLICK = 'dblclick',\n\t\tTOUCHSTART = 'touchstart',\n\t\tCLICK = 'click',\n\t\tpick = HC.pick,\n\t\twrap = HC.wrap,\n\t\tmerge = HC.merge,\n\t\taddEvent = HC.addEvent,\n\t\tisTouchDevice = HC.isTouchDevice,\n\t\tdefaultOptions = HC.getOptions().plotOptions,\n\t\taxisProto = HC.Axis && HC.Axis.prototype,\n\t\tplotLineOrBandProto = HC.PlotLineOrBand && HC.PlotLineOrBand.prototype,\n\t\tseriesTypes = HC.seriesTypes,\n\t\tseriesProto = HC.Series && HC.Series.prototype,\n\t\tisObject,\n\t\tisNumber,\n\t\tisArray,\n\t\tobjectEach,\n\t\tcustomEvents,\n\t\tproto,\n\t\tmethods;\n\n\t/*\n\t * Back compatibility\n\t */\n\n\tisArray = HC.isArray || function (obj) {\n\t\tvar str = Object.prototype.toString.call(obj);\n\t\treturn str === '[object Array]' || str === '[object Array Iterator]';\n\t};\n\t\n\tobjectEach = HC.objectEach || function (obj, fn, ctx) {\n\t\tfor (var key in obj) {\n\t    \tif (obj.hasOwnProperty(key)) {\n\t    \t\tfn.call(ctx, obj[key], key, obj);\n\t    \t}\n\t\t}\n\t};\n\n\tisNumber = HC.isNumber || function (n) {\n\t\treturn typeof n === 'number' && !isNaN(n);\n\t};\n\n\tisObject = HC.isObject || function (obj) {\n\t\treturn obj && typeof obj === 'object';\n\t}\n\n\t/**\n\t * WRAPPED FUNCTIONS\n\t */\n\n\t// reset exis events\n\tif (plotLineOrBandProto) { // # condition for highmaps and custom builds\n\t\twrap(plotLineOrBandProto, 'render', function (proceed) {\n\t\t\tvar defaultEvents = this.options && this.options.events;\n\t\t\n\t\t\t// reset default events on plot lines or bands\n\t\t\tif (defaultEvents) {\n\t\t\t\tdefaultEvents = false;\n\t\t\t}\n\n\t\t\treturn proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t});\n\t}\n\tif (seriesProto) { // # condition for highmaps and custom builds\n\t\twrap(seriesProto, 'init', function (proceed, chart, options) {\n\t\t\tvar chartOptions = chart.options,\n\t\t\t\tplotOptions = chartOptions.plotOptions,\n\t\t\t\tseriesOptions = chartOptions.plotOptions.series,\n\t\t\t\tuserOptions = merge(seriesOptions, plotOptions[this.type], options),\n\t\t\t\tuserOptionsEvents = userOptions && userOptions.events,\n\t\t\t\tuserOptionsPointEvents = userOptions && userOptions.point && userOptions.point.events; // Fixed #70\n\n\t\t\t// reset default events on series and series point\n\t\t\toptions.events = {};\n\t\t\toptions.point = {\n\t\t\t\tevents: {}\n\t\t\t};\n\n\t\t\t// Add support for legendItemClick\n\t\t\tif (userOptionsEvents) {\n\t\t\t\toptions.events = {\n\t\t\t\t\tlegendItemClick: userOptionsEvents && userOptionsEvents.legendItemClick\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Add support for legendItemClick in pie chart\n\t\t\tif (userOptionsPointEvents) {\n\t\t\t\toptions.point.events = {\n\t\t\t\t\tlegendItemClick: userOptionsPointEvents && userOptionsPointEvents.legendItemClick,\n\t\t\t\t\tselect: userOptionsPointEvents && userOptionsPointEvents.select,\n\t\t\t\t\tunselect: userOptionsPointEvents && userOptionsPointEvents.unselect,\n\t\t\t\t\tclick: userOptionsPointEvents && userOptionsPointEvents.click,\n\t\t\t\t\tmouseOut: userOptionsPointEvents && userOptionsPointEvents.mouseOut,\n\t\t\t\t\tmouseOver: userOptionsPointEvents && userOptionsPointEvents.mouseOver\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// attach events to custom object, which is used in attach event\n\t\t\toptions.customEvents = {\n\t\t\t\tseries: userOptionsEvents,\n\t\t\t\tpoint: userOptionsPointEvents\n\t\t\t};\n\n\t\t\t// call default action\n\t\t\tproceed.apply(this, Array.prototype.slice.call(arguments, 1));\n\n\t\t});\n\t}\n\n\tHC.Chart.prototype.customEvent = {\n\t\t/**\n\t\t * @description Example: [HC.Series, ['drawPoints', 'drawDataLabels']]\n\t\t * @memberof customEvents\n\t\t * @returns {Array} array of pairs: prototype, array of methods to wrap\n\t\t **/\n\t\tgetEventsProtoMethods: function () {\n\t\t\tvar protoMethods = [\n\t\t\t\t[HC.Tick, ['addLabel']],\n\t\t\t\t[HC.Axis, ['render']],\n\t\t\t\t[HC.Axis, ['drawCrosshair']],\n\t\t\t\t[HC.Chart, ['setTitle']],\n\t\t\t\t[HC.Legend, ['renderItem']],\n\t\t\t\t[HC.PlotLineOrBand, ['render']],\n\t\t\t\t[HC.Series, ['drawPoints', 'drawDataLabels']]\n\t\t\t];\n\n\t\t\t// support for extra series\n\t\t\tobjectEach(seriesTypes, function (fn, seriesType) {\n\t\t\t\tprotoMethods.push([\n\t\t\t\t\tseriesTypes[seriesType], ['drawPoints', 'drawDataLabels']\n\t\t\t\t]);\n\t\t\t});\n\t\n\t\t\treturn protoMethods;\n\t\t},\n\t\t/**\n\t\t * @description Init method, based on getEventsProtoMethods() array. Iterates on array of prototypes and methods to wrap\n\t\t * @memberof customEvents\n\t\t **/\n\t\tinit: function () {\n\t\t\tvar eventsProtoMethods = this.getEventsProtoMethods(); // array of pairs [object, [methods]]\n\t\t\t\n\t\t\teventsProtoMethods.forEach(function (protoMethod) {\n\t\t\t\tif (isArray(protoMethod)) {\n\t\t\t\t\tproto = protoMethod[0] && protoMethod[0].prototype;\n\t\t\t\t\tmethods = protoMethod[1];\n\n\t\t\t\t\tif (proto) {\n\t\t\t\t\t\tmethods.forEach(function (method) {\n\t\t\t\t\t\t\tcustomEvents.attach(proto, method);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * @description Wraps methods i.e drawPoints to extract SVG element and set an event by calling customEvents.add()\n\t\t * @param {Object} proto Highcharts prototype i.e Highcharts.Series.prototype\n\t\t * @param {Object} hcMethod name of wrapped method i.e drawPoints\n\t\t * @memberof customEvents\n\t\t **/\n\t\tattach: function (proto, hcMethod) {\n\t\t\t\n\t\t\twrap(proto, hcMethod, function (proceed, param) {\n\t\t\t\tvar eventElement = {\n\t\t\t\t\t\tevents: UNDEFINED,\n\t\t\t\t\t\telement: UNDEFINED\n\t\t\t\t\t},\n\t\t\t\t\tproceedObject,\n\t\t\t\t\tlen,\n\t\t\t\t\tj;\n\n\t\t\t\t//  call default actions\n\t\t\t\tproceedObject = proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n\n\t\t\t\t//\tcall\n\t\t\t\teventElement = customEvents.eventElement[hcMethod].call(this, param);\n\n\t\t\t\t//  stop, when events and SVG element do not exist\n\t\t\t\tif (!eventElement.events && !eventElement.eventsSubtitle && !eventElement.eventsPoint) {\n\t\t\t\t\treturn proceedObject;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (eventElement.eventsPoint) {\n\n\t\t\t\t\tlen = eventElement.elementPoint.length;\n\n\t\t\t\t\t// attach events per each point\n\t\t\t\t\tfor (j = 0; j < len; j++) {\n\t\t\t\t\t\tif (eventElement.elementPoint[j]) {\n\t\t\t\t\t\t\tvar elemPoint = pick(eventElement.elementPoint[j].graphic, eventElement.elementPoint[j]);\n\n\t\t\t\t\t\t\tif (elemPoint && elemPoint !== UNDEFINED) {\n\t\t\t\t\t\t\t\tcustomEvents.add(elemPoint, eventElement.eventsPoint, eventElement.elementPoint[j], eventElement, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// attach event to subtitle\n\t\t\t\tif (eventElement.eventsSubtitle) {\n\t\t\t\t\tcustomEvents.add(eventElement.elementSubtitle, eventElement.eventsSubtitle, eventElement, this);\n\t\t\t\t}\n\n\t\t\t\t// attach event to each datalabal and add reference to each point\n\t\t\t\tif (eventElement.dataLabelsPoints) {\n\t\t\t\t\tvar dataLabelsPoints = eventElement.dataLabelsPoints;\n\t\t\t\t\t\n\t\t\t\t\tlen = dataLabelsPoints.length;\n\n\t\t\t\t\tfor (j = 0; j < len; j++) {\n\t\t\t\t\t\tcustomEvents.add(\n\t\t\t\t\t\t\tdataLabelsPoints[j].dataLabel,\n\t\t\t\t\t\t\teventElement.events,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataLabel: dataLabelsPoints[j].dataLabel,\n\t\t\t\t\t\t\t\tpoint: dataLabelsPoints[j]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// attach event to stackLabels\n\t\t\t\tif (eventElement.eventsStackLabel) {\n\t\t\t\t\tcustomEvents.add(eventElement.elementStackLabel, eventElement.eventsStackLabel, eventElement, this);\n\t\t\t\t}\n\n\t\t\t\tcustomEvents.add(eventElement.element, eventElement.events, eventElement, this);\n\n\t\t\t\treturn proceedObject;\n\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * @description adds event on a SVG element\n\t\t * @param {Object} SVGelem graphic element\n\t\t * @param {Object} events object with all events\n\t\t * @param {Object} elemObj \"this\" object, which is available in the event\n\t\t * @param {Object} series chart series\n\t\t * @memberof customEvents\n\t\t **/\n\t\tadd: function (SVGelem, events, elemObj, eventElement, isPoint) {\n\n\t\t\tvar eventObject = eventElement.eventObject || elemObj.eventObject, //\tFix series reference #89\n\t\t\t\tisSeries = elemObj.isSeries || eventElement.isSeries;\n\n\n\t\t\t// stop when SVG element does not exist\n\t\t\tif (!SVGelem || !SVGelem.element) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (var action in events) {\n\n\t\t\t\t(function (event) {\n\t\t\t\t\tif (events.hasOwnProperty(event) && !SVGelem[event]) {\n\t\t\t\t\t\tif (isTouchDevice && event === DBLCLICK) { //  #30 - fallback for iPad\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar tapped = false;\n\n\t\t\t\t\t\t\taddEvent(SVGelem.element, TOUCHSTART, function (e) {\n\n\t\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\t\tif (isSeries) { // #93\n\t\t\t\t\t\t\t\t\tvar chart = eventObject.chart,\n\t\t\t\t\t\t\t\t\t\tnormalizedEvent = chart.pointer.normalize(e);\n\n\t\t\t\t\t\t\t\t\tif (!eventObject.directTouch) {\n\t\t\t\t\t\t\t\t\t\telemObj = eventObject.searchPoint(normalizedEvent, eventObject.kdDimensions === 1);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\te.point = elemObj;\t//\t#89 point reference in mouse event\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ((eventObject && !isPoint) || (eventObject && isNumber(eventObject.value))) { // #95 \n\t\t\t\t\t\t\t\t\teventObject.value = elemObj.textStr;\n\t\t\t\t\t\t\t\t\telemObj = eventObject;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (elemObj && elemObj.textStr) { // labels\n\t\t\t\t\t\t\t\t\telemObj.value = elemObj.textStr;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (elemObj && elemObj.drilldown) { // #114 - drillUp - undefined ddDupes []\n\t\t\t\t\t\t\t\t\telemObj.doDrilldown(undefined, undefined, e);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (!tapped) {\n\n\t\t\t\t\t\t\t\t\ttapped = setTimeout(function () {\n\t\t\t\t\t\t\t\t\t\ttapped = null;\n\t\t\t\t\t\t\t\t\t\tif (events[CLICK] && elemObj && elemObj.drilldown === undefined) {\n\t\t\t\t\t\t\t\t\t\t\tevents[CLICK].call(elemObj, e); //\tcall single click action\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, 300);\n\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tclearTimeout(tapped);\n\n\t\t\t\t\t\t\t\t\ttapped = null;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (elemObj && elemObj.drilldown === undefined) {\n\t\t\t\t\t\t\t\t\t\tevents[event].call(elemObj, e);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddEvent(SVGelem.element, event, function (e) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\t\tif (isSeries) { // #108, #93 - references in e.point and this after chart.update()\n\t\t\t\t\t\t\t\t\tvar chart = eventObject.chart,\n\t\t\t\t\t\t\t\t\t\tnormalizedEvent = chart.pointer.normalize(e);\n\n\t\t\t\t\t\t\t\t\tif (!eventObject.directTouch) {\n\t\t\t\t\t\t\t\t\t\telemObj = eventObject.searchPoint(normalizedEvent, eventObject.kdDimensions === 1);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\te.point = elemObj;\t//\t#89 point reference in mouse event\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ((eventObject && !isPoint) || (eventObject && isNumber(eventObject.value))) { // #95 wrong reference for axis labels\n\t\t\t\t\t\t\t\t\teventObject.value = elemObj.textStr || eventObject.value; // #95, #98 wrong reference for axis labels\n\t\t\t\t\t\t\t\t\telemObj = eventObject;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (elemObj && elemObj.textStr) { // labels\n\t\t\t\t\t\t\t\t\telemObj.value = elemObj.textStr;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tisPoint &&\n\t\t\t\t\t\t\t\t\tevent === 'click' &&\n\t\t\t\t\t\t\t\t\telemObj.series &&\n\t\t\t\t\t\t\t\t\telemObj.series.options &&\n\t\t\t\t\t\t\t\t\telemObj.series.options.allowPointSelect\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tvar defaultFunction = function (event) {\n\t\t\t\t\t\t\t\t\t\t// Control key is for Windows, meta (= Cmd key) for Mac, Shift\n\t\t\t\t\t\t\t\t\t\t// for Opera.\n\t\t\t\t\t\t\t\t\t\tif (elemObj.select) { // #2911\n\t\t\t\t\t\t\t\t\t\t\t\telemObj.select(null, e.ctrlKey || e.metaKey || e.shiftKey);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t  \tHC.fireEvent(elemObj, event, e, defaultFunction);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (elemObj && elemObj.drilldown) { // #114 - drillUp - undefined ddDupes []\n\t\t\t\t\t\t\t\t\telemObj.doDrilldown(undefined, undefined, e);\n\t\t\t\t\t\t\t\t} else if (events && events[event]) {\n\t\t\t\t\t\t\t\t\tevents[event].call(elemObj, e);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tSVGelem[event] = function () {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t})(action);\n\t\t\t}\n\t\t},\n\t\teventElement: {\n\t\t\t/**\n\t\t\t* @typedef {Object} eventElement\n\t\t\t**/\n\t\t\t/**\n\t\t\t * @description Extracts SVG elements from points\n\t\t\t * @property {Object} eventsPoint events for point\n\t\t\t * @property {Array} elementPoint array of SVG point elements\n\t\t\t * @property {Object} eventObject object kept in this on i.e click\n\t\t\t * @return {Object} { events: object, element: object }\n\t\t\t * @memberof customEvents\n\t\t\t **/\n\t\t\taddLabel: function () {\n\t\t\t\tvar parent = this.parent,\n\t\t\t\t\taxis = this.axis,\n\t\t\t\t\taxisOptions = axis.options,\n\t\t\t\t\teventsPoint = axisOptions.labels && axisOptions.labels.events,\n\t\t\t\t\telementPoint = [this.label],\n\t\t\t\t\tlen, i;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tvar step = this; // current label\n\n\t\t\t\t\twhile (step) {\n\t\t\t\t\t\tif (isArray(step)) {\n\t\t\t\t\t\t\tlen = step.length;\n\n\t\t\t\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\t\t\t\telementPoint.push(step[i].label);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telementPoint.push(step.label);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstep = step.parent;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\teventsPoint: eventsPoint,\n\t\t\t\t\telementPoint: elementPoint,\n\t\t\t\t\teventObject: {\n\t\t\t\t\t\taxis: axis,\n\t\t\t\t\t\tisFirst: this.isFirst,\n\t\t\t\t\t\tisLast: this.isLast,\n\t\t\t\t\t\tchart: axis.chart,\n\t\t\t\t\t\tdateTimeLabelFormat: axisOptions.dateTimeLabelFormats,\n\t\t\t\t\t\tvalue: this.pos,\n\t\t\t\t\t\tpos: this.pos\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Extracts SVG elements from title and subtitle\n\t\t\t * @property {Object} events events for title\n\t\t\t * @property {Array} elementPoint title SVG element\n\t\t\t * @property {Object} eventsSubtitle events for subtitle\n\t\t\t * @property {Array} elementSubtitle subtitle SVG element\n\t\t\t * @return {Object} {event: object, element: object, eventsSubtitle: object, elementSubtitle: object }\n\t\t\t * @memberof customEvents\n\t\t\t **/\n\t\t\tsetTitle: function () {\n\t\t\t\tvar events = this.options.title && this.options.title.events,\n\t\t\t\t\telement = this.title,\n\t\t\t\t\teventsSubtitle = this.options.subtitle && this.options.subtitle.events,\n\t\t\t\t\telementSubtitle = this.subtitle;\n\n\t\t\t\treturn {\n\t\t\t\t\tevents: events,\n\t\t\t\t\telement: element,\n\t\t\t\t\teventsSubtitle: eventsSubtitle,\n\t\t\t\t\telementSubtitle: elementSubtitle\n\t\t\t\t};\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Extracts SVG elements from dataLabels\n\t\t\t * @property {Object} events events for dataLabels\n\t\t\t * @property {Array} element dataLabels SVG element\n\t\t\t * @return {Object} { events: object, element: object }\n\t\t\t * @memberof customEvents\n\t\t\t **/\n\t\t\tdrawDataLabels: function () {\n\t\t\t\tvar dataLabelsGroup = this.dataLabelsGroup,\n\t\t\t\t\tdataLabelEvents = dataLabelsGroup && this.options.dataLabels.events;\n\n\t\t\t\treturn {\n\t\t\t\t\tevents: dataLabelEvents,\n\t\t\t\t\telement: dataLabelsGroup,\n\t\t\t\t\tdataLabelsPoints: this.points\n\t\t\t\t};\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Extracts SVG elements from axis title and stackLabels\n\t\t\t * @property {Object} events events for axis title\n\t\t\t * @property {Array} element axis title SVG element\n\t\t\t * @property {Object} eventsPoint events for stacklabels\n\t\t\t * @property {Array} elementPoint stacklabels SVG element\n\t\t\t * @property {Object} eventsStackLabel events for stacklabels\n\t\t\t * @property {Array} elementStackLabel stacklabels group SVG element\n\t\t\t * @return {Object} { events: object, element: object, eventsPoint: object, elementPoint: object, eventsStackLabel: object, elementStackLabel: object }\n\t\t\t * @memberof customEvents\n\t\t\t **/\n\t\t\trender: function () {\n\t\t\t\tvar stackLabels = this.options.stackLabels,\n\t\t\t\t\tevents,\n\t\t\t\t\telement,\n\t\t\t\t\teventsPoint,\n\t\t\t\t\telementPoint,\n\t\t\t\t\teventsStackLabel,\n\t\t\t\t\telementStackLabel;\n\n\t\t\t\tif (this.axisTitle) {\n\t\t\t\t\tevents = this.options.title.events;\n\t\t\t\t\telement = this.axisTitle;\n\t\t\t\t}\n\n\t\t\t\tif (stackLabels && stackLabels.enabled) {\n\t\t\t\t\teventsPoint = stackLabels.events;\n\t\t\t\t\telementPoint = this.stacks || this.stacking.stacks;\n\t\t\t\t\teventsStackLabel = stackLabels.events;\n\t\t\t\t\telementStackLabel = this.stackTotalGroup || this.stacking.stackTotalGroup;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tevents: events,\n\t\t\t\t\telement: element,\n\t\t\t\t\teventsPoint: eventsPoint,\n\t\t\t\t\telementPoint: elementPoint,\n\t\t\t\t\teventsStackLabel: eventsStackLabel,\n\t\t\t\t\telementStackLabel: elementStackLabel\n\t\t\t\t};\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Extracts SVG elements from series and series points\n\t\t\t * @property {Object} events events for series\n\t\t\t * @property {Array} element series SVG element\n\t\t\t * @property {Object} events events for series points\n\t\t\t * @property {Array} element series points SVG element\n\t\t\t * @return {Object} { events: object, element: object, eventsPoint: object, elementPoint: object }\n\t\t\t * @memberof customEvents\n\t\t\t **/\n\t\t\tdrawPoints: function () {\n\t\t\t\tvar op = this.options,\n\t\t\t\t\ttype = this.type,\n\t\t\t\t\tevents = op.customEvents ? op.customEvents.series : op.events,\n\t\t\t\t\telement = this.group,\n\t\t\t\t\teventsPoint = op.customEvents ? op.customEvents.point : op.point.events,\n\t\t\t\t\telementPoint;\n\n\t\t\t\tif (defaultOptions[type] && defaultOptions[type].marker && !this.bubblePadding) {\n\t\t\t\t\telementPoint = [this.markerGroup]; //\tget markers when enabled\n\t\t\t\t} else {\n\t\t\t\t\telementPoint = this.points; //\textract points\n\t\t\t\t}\n\n\t\t\t\tif (!this.kdTree && !this.buildingKdTree) {\n\t\t\t\t\tthis.buildKDTree(); //\t#86, missing reference to point on first mouseover\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tevents: events,\n\t\t\t\t\telement: element,\n\t\t\t\t\teventsPoint: eventsPoint,\n\t\t\t\t\telementPoint: elementPoint,\n\t\t\t\t\teventObject: this,\n\t\t\t\t\tisSeries: true\n\t\t\t\t};\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Extracts SVG elements from legend item\n\t\t\t * @property {Object} events events for legend item\n\t\t\t * @property {Array} element legend item SVG element\n\t\t\t * @return {Object} { events: object, element: object }\n\t\t\t * @memberof customEvents\n\t\t\t **/\n\t\t\trenderItem: function (item) {\n\t\t\t\treturn {\n\t\t\t\t\tevents: this.options.itemEvents,\n\t\t\t\t\telement: item.legendGroup,\n\t\t\t\t\teventObject: item\n\t\t\t\t};\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Extracts SVG elements from crosshair\n\t\t\t * @property {Object} events events for crosshair\n\t\t\t * @property {Array} element crosshair SVG element\n\t\t\t * @return {Object} { events: object, element: object }\n\t\t\t * @memberof customEvents\n\t\t\t **/\n\t\t\tdrawCrosshair: function () {\n\t\t\t\tvar cross = this.cross,\n\t\t\t\t\tcrosshairOptions = this.options.crosshair;\n\n\t\t\t\tif (cross) {\n\t\t\t\t\tcross.css({\n\t\t\t\t\t\t'pointer-events': 'auto'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tevents: crosshairOptions && crosshairOptions.events,\n\t\t\t\t\telement: cross\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t};\n\n\tcustomEvents = HC.Chart.prototype.customEvent;\n\tcustomEvents.init();\n\n}));"],
  "mappings": "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",
  "names": ["Highcharts", "proto", "event"]
}
