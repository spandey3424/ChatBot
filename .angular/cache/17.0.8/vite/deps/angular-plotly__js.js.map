{
  "version": 3,
  "sources": ["../../../../../node_modules/angular-plotly.js/fesm2020/angular-plotly.js.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"plot\"];\nconst _c1 = [\"*\"];\nclass PlotlyService {\n  static setModuleName(moduleName) {\n    PlotlyService.moduleName = moduleName;\n  }\n  static getModuleName() {\n    return PlotlyService.moduleName;\n  }\n  static setPlotly(plotly) {\n    if (typeof plotly === 'object' && typeof plotly.react !== 'function') {\n      throw new Error('Invalid plotly.js version. Please, use any version above 1.40.0');\n    }\n    PlotlyService.plotly = plotly;\n  }\n  static insert(instance) {\n    const index = PlotlyService.instances.indexOf(instance);\n    if (index === -1) {\n      PlotlyService.instances.push(instance);\n    }\n    return instance;\n  }\n  static remove(div) {\n    const index = PlotlyService.instances.indexOf(div);\n    if (index >= 0) {\n      PlotlyService.instances.splice(index, 1);\n      PlotlyService.plotly.purge(div);\n    }\n  }\n  getInstanceByDivId(id) {\n    for (const instance of PlotlyService.instances) {\n      if (instance && instance.id === id) {\n        return instance;\n      }\n    }\n    return undefined;\n  }\n  async getPlotly() {\n    await this.waitFor(() => this._getPlotly() !== 'waiting');\n    return this._getPlotly();\n  }\n  _getPlotly() {\n    if (typeof PlotlyService.plotly === 'undefined') {\n      const msg = PlotlyService.moduleName === 'ViaCDN' ? `Error loading Peer dependency plotly.js from CDN url` : `Peer dependency plotly.js isn't installed`;\n      throw new Error(msg);\n    }\n    return PlotlyService.plotly;\n  }\n  waitFor(fn) {\n    return new Promise(resolve => {\n      const localFn = () => {\n        fn() ? resolve() : setTimeout(localFn, 10);\n      };\n      localFn();\n    });\n  }\n  async newPlot(div, data, layout, config, frames) {\n    await this.waitFor(() => this._getPlotly() !== 'waiting');\n    if (frames) {\n      const obj = {\n        data,\n        layout,\n        config,\n        frames\n      };\n      return this._getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div));\n    }\n    return this._getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div));\n  }\n  plot(div, data, layout, config, frames) {\n    if (frames) {\n      const obj = {\n        data,\n        layout,\n        config,\n        frames\n      };\n      return this._getPlotly().newPlot(div, obj);\n    }\n    return this._getPlotly().newPlot(div, data, layout, config);\n  }\n  update(div, data, layout, config, frames) {\n    if (frames) {\n      const obj = {\n        data,\n        layout,\n        config,\n        frames\n      };\n      return this._getPlotly().react(div, obj);\n    }\n    return this._getPlotly().react(div, data, layout, config);\n  }\n  resize(div) {\n    return this._getPlotly().Plots.resize(div);\n  }\n}\nPlotlyService.instances = [];\nPlotlyService.plotly = undefined;\nPlotlyService.moduleName = undefined;\nPlotlyService.ɵfac = function PlotlyService_Factory(t) {\n  return new (t || PlotlyService)();\n};\nPlotlyService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PlotlyService,\n  factory: PlotlyService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlyService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass PlotlyThemeLoaderService {\n  constructor() {\n    this._isLoading = false;\n  }\n  get isLoading() {\n    return this._isLoading;\n  }\n  load(themeName) {\n    this._isLoading = true;\n    return new Promise(resolve => {\n      // import(`./themes/${themeName}.json`).then(data => {\n      resolve(true);\n      //     this._isLoading = false;\n      // });\n    });\n  }\n}\n\nPlotlyThemeLoaderService.ɵfac = function PlotlyThemeLoaderService_Factory(t) {\n  return new (t || PlotlyThemeLoaderService)();\n};\nPlotlyThemeLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PlotlyThemeLoaderService,\n  factory: PlotlyThemeLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlyThemeLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\n// @dynamic\nclass PlotlyComponent {\n  constructor(plotly, themeLoader, iterableDiffers, keyValueDiffers) {\n    this.plotly = plotly;\n    this.themeLoader = themeLoader;\n    this.iterableDiffers = iterableDiffers;\n    this.keyValueDiffers = keyValueDiffers;\n    this.defaultClassName = 'js-plotly-plot';\n    this.theme = \"none\";\n    this.revision = 0;\n    this.debug = false;\n    this.useResizeHandler = false;\n    this.updateOnLayoutChange = true;\n    this.updateOnDataChange = true;\n    this.updateOnlyWithRevision = false;\n    this.initialized = new EventEmitter();\n    this.update = new EventEmitter();\n    this.purge = new EventEmitter();\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    this.error = new EventEmitter();\n    this.afterExport = new EventEmitter();\n    this.afterPlot = new EventEmitter();\n    this.animated = new EventEmitter();\n    this.animatingFrame = new EventEmitter();\n    this.animationInterrupted = new EventEmitter();\n    this.autoSize = new EventEmitter();\n    this.beforeExport = new EventEmitter();\n    this.beforeHover = new EventEmitter();\n    this.buttonClicked = new EventEmitter();\n    /**\n     * @deprecated DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. Please check https://github.com/plotly/angular-plotly.js#FAQ\n     */\n    // eslint-disable-next-line @angular-eslint/no-output-native\n    this.click = new EventEmitter();\n    this.plotlyClick = new EventEmitter();\n    this.clickAnnotation = new EventEmitter();\n    this.deselect = new EventEmitter();\n    this.doubleClick = new EventEmitter();\n    this.framework = new EventEmitter();\n    this.hover = new EventEmitter();\n    this.legendClick = new EventEmitter();\n    this.legendDoubleClick = new EventEmitter();\n    /**\n     * @deprecated DEPRECATED: Event react is not list as an plotly.js event\n     */\n    this.react = new EventEmitter();\n    this.relayout = new EventEmitter();\n    this.relayouting = new EventEmitter();\n    this.restyle = new EventEmitter();\n    this.redraw = new EventEmitter();\n    this.selected = new EventEmitter();\n    this.selecting = new EventEmitter();\n    this.sliderChange = new EventEmitter();\n    this.sliderEnd = new EventEmitter();\n    this.sliderStart = new EventEmitter();\n    this.sunburstclick = new EventEmitter();\n    this.transitioning = new EventEmitter();\n    this.transitionInterrupted = new EventEmitter();\n    this.unhover = new EventEmitter();\n    /**\n     * @deprecated DEPRECATED: Event treemapclick is not list as an plotly.js event\n     */\n    this.treemapclick = new EventEmitter();\n    this.webglcontextlost = new EventEmitter();\n    this.eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize', 'beforeExport', 'beforeHover', 'buttonClicked', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover', 'legendClick', 'legendDoubleClick', 'react', 'relayout', 'relayouting', 'restyle', 'redraw', 'selected', 'selecting', 'sliderChange', 'sliderEnd', 'sliderStart', 'sunburstclick', 'transitioning', 'transitionInterrupted', 'unhover', 'treemapclick', 'webglcontextlost'];\n  }\n  ngOnInit() {\n    this.createPlot().then(() => {\n      const figure = this.createFigure();\n      this.initialized.emit(figure);\n    });\n    if (this.click.observers.length > 0) {\n      const msg = 'DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. ' + 'Please check https://github.com/plotly/angular-plotly.js#FAQ';\n      console.error(msg);\n    }\n    // if (this.theme != 'none') this.loadTheme();\n  }\n\n  ngOnDestroy() {\n    if (typeof this.resizeHandler === 'function') {\n      this.getWindow().removeEventListener('resize', this.resizeHandler);\n      this.resizeHandler = undefined;\n    }\n    if (this.plotlyInstance) {\n      const figure = this.createFigure();\n      this.purge.emit(figure);\n      PlotlyService.remove(this.plotlyInstance);\n    }\n  }\n  ngOnChanges(changes) {\n    let shouldUpdate = false;\n    const revision = changes['revision'];\n    if (revision && !revision.isFirstChange()) {\n      shouldUpdate = true;\n    }\n    const debug = changes['debug'];\n    if (debug && !debug.isFirstChange()) {\n      shouldUpdate = true;\n    }\n    if (shouldUpdate) {\n      this.updatePlot();\n    }\n    this.updateWindowResizeHandler();\n  }\n  ngDoCheck() {\n    if (this.updateOnlyWithRevision) {\n      return false;\n    }\n    let shouldUpdate = false;\n    if (this.updateOnLayoutChange) {\n      if (this.layoutDiffer) {\n        const layoutHasDiff = this.layoutDiffer.diff(this.layout);\n        if (layoutHasDiff) {\n          shouldUpdate = true;\n        }\n      } else if (this.layout) {\n        this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\n      } else {\n        this.layoutDiffer = undefined;\n      }\n    }\n    if (this.updateOnDataChange) {\n      if (this.dataDiffer) {\n        const dataHasDiff = this.dataDiffer.diff(this.data);\n        if (dataHasDiff) {\n          shouldUpdate = true;\n        }\n      } else if (Array.isArray(this.data)) {\n        this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\n      } else {\n        this.dataDiffer = undefined;\n      }\n    }\n    if (shouldUpdate && this.plotlyInstance) {\n      this.updatePlot();\n    }\n  }\n  getData() {\n    return this.data ?? [];\n  }\n  getWindow() {\n    return window;\n  }\n  getClassName() {\n    let classes = [this.defaultClassName];\n    if (Array.isArray(this.className)) {\n      classes = classes.concat(this.className);\n    } else if (this.className) {\n      classes.push(this.className);\n    }\n    return classes.join(' ');\n  }\n  createPlot() {\n    return this.plotly.newPlot(this.plotEl.nativeElement, this.getData(), this.layout, this.config, this.frames).then(plotlyInstance => {\n      this.plotlyInstance = plotlyInstance;\n      this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n      this.eventNames.forEach(name => {\n        const eventName = `plotly_${name.toLowerCase()}`;\n        const event = this[name];\n        plotlyInstance.on(eventName, data => event.emit(data));\n      });\n      plotlyInstance.on('plotly_click', data => {\n        this.plotlyClick.emit(data);\n      });\n      this.updateWindowResizeHandler();\n    }, err => {\n      console.error('Error while plotting:', err);\n      this.error.emit(err);\n    });\n  }\n  createFigure() {\n    const p = this.plotlyInstance;\n    const figure = {\n      data: p.data,\n      layout: p.layout,\n      frames: p._transitionData ? p._transitionData._frames : null\n    };\n    return figure;\n  }\n  updatePlot() {\n    if (!this.plotlyInstance) {\n      const error = new Error(`Plotly component wasn't initialized`);\n      this.error.emit(error);\n      throw error;\n    }\n    const layout = {\n      ...this.layout\n    };\n    return this.plotly.update(this.plotlyInstance, this.getData(), layout, this.config, this.frames).then(() => {\n      const figure = this.createFigure();\n      this.update.emit(figure);\n    }, err => {\n      console.error('Error while updating plot:', err);\n      this.error.emit(err);\n    });\n  }\n  updateWindowResizeHandler() {\n    if (this.useResizeHandler) {\n      if (this.resizeHandler === undefined) {\n        this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\n        this.getWindow().addEventListener('resize', this.resizeHandler);\n      }\n    } else {\n      if (typeof this.resizeHandler === 'function') {\n        this.getWindow().removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = undefined;\n      }\n    }\n  }\n  dataDifferTrackBy(_, item) {\n    const obj = Object.assign({}, item, {\n      uid: ''\n    });\n    return JSON.stringify(obj);\n  }\n  loadTheme() {\n    if (this.layout !== undefined) {\n      const msg = 'You fulfill both `theme` and `layout` properties. This will overwrite the `layout` data with the `theme` data.';\n      console.warn(msg);\n    }\n    this.themeLoader.load(this.theme).then(theme => this.layout = theme);\n  }\n}\nPlotlyComponent.ɵfac = function PlotlyComponent_Factory(t) {\n  return new (t || PlotlyComponent)(i0.ɵɵdirectiveInject(PlotlyService), i0.ɵɵdirectiveInject(PlotlyThemeLoaderService), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i0.KeyValueDiffers));\n};\nPlotlyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PlotlyComponent,\n  selectors: [[\"plotly-plot\"]],\n  viewQuery: function PlotlyComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.plotEl = _t.first);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    layout: \"layout\",\n    config: \"config\",\n    frames: \"frames\",\n    style: \"style\",\n    theme: \"theme\",\n    divId: \"divId\",\n    revision: \"revision\",\n    className: \"className\",\n    debug: \"debug\",\n    useResizeHandler: \"useResizeHandler\",\n    updateOnLayoutChange: \"updateOnLayoutChange\",\n    updateOnDataChange: \"updateOnDataChange\",\n    updateOnlyWithRevision: \"updateOnlyWithRevision\"\n  },\n  outputs: {\n    initialized: \"initialized\",\n    update: \"update\",\n    purge: \"purge\",\n    error: \"error\",\n    afterExport: \"afterExport\",\n    afterPlot: \"afterPlot\",\n    animated: \"animated\",\n    animatingFrame: \"animatingFrame\",\n    animationInterrupted: \"animationInterrupted\",\n    autoSize: \"autoSize\",\n    beforeExport: \"beforeExport\",\n    beforeHover: \"beforeHover\",\n    buttonClicked: \"buttonClicked\",\n    click: \"click\",\n    plotlyClick: \"plotlyClick\",\n    clickAnnotation: \"clickAnnotation\",\n    deselect: \"deselect\",\n    doubleClick: \"doubleClick\",\n    framework: \"framework\",\n    hover: \"hover\",\n    legendClick: \"legendClick\",\n    legendDoubleClick: \"legendDoubleClick\",\n    react: \"react\",\n    relayout: \"relayout\",\n    relayouting: \"relayouting\",\n    restyle: \"restyle\",\n    redraw: \"redraw\",\n    selected: \"selected\",\n    selecting: \"selecting\",\n    sliderChange: \"sliderChange\",\n    sliderEnd: \"sliderEnd\",\n    sliderStart: \"sliderStart\",\n    sunburstclick: \"sunburstclick\",\n    transitioning: \"transitioning\",\n    transitionInterrupted: \"transitionInterrupted\",\n    unhover: \"unhover\",\n    treemapclick: \"treemapclick\",\n    webglcontextlost: \"webglcontextlost\"\n  },\n  features: [i0.ɵɵProvidersFeature([PlotlyService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 3,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"plot\", \"\"]],\n  template: function PlotlyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.getClassName())(\"ngStyle\", ctx.style);\n      i0.ɵɵattribute(\"id\", ctx.divId);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgStyle],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'plotly-plot',\n      template: `<div #plot [attr.id]=\"divId\" [ngClass]=\"getClassName()\" [ngStyle]=\"style\">\n      <ng-content></ng-content>\n    </div>`,\n      providers: [PlotlyService]\n    }]\n  }], function () {\n    return [{\n      type: PlotlyService\n    }, {\n      type: PlotlyThemeLoaderService\n    }, {\n      type: i0.IterableDiffers\n    }, {\n      type: i0.KeyValueDiffers\n    }];\n  }, {\n    plotEl: [{\n      type: ViewChild,\n      args: ['plot', {\n        static: true\n      }]\n    }],\n    data: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    config: [{\n      type: Input\n    }],\n    frames: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    divId: [{\n      type: Input\n    }],\n    revision: [{\n      type: Input\n    }],\n    className: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    useResizeHandler: [{\n      type: Input\n    }],\n    updateOnLayoutChange: [{\n      type: Input\n    }],\n    updateOnDataChange: [{\n      type: Input\n    }],\n    updateOnlyWithRevision: [{\n      type: Input\n    }],\n    initialized: [{\n      type: Output\n    }],\n    update: [{\n      type: Output\n    }],\n    purge: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }],\n    afterExport: [{\n      type: Output\n    }],\n    afterPlot: [{\n      type: Output\n    }],\n    animated: [{\n      type: Output\n    }],\n    animatingFrame: [{\n      type: Output\n    }],\n    animationInterrupted: [{\n      type: Output\n    }],\n    autoSize: [{\n      type: Output\n    }],\n    beforeExport: [{\n      type: Output\n    }],\n    beforeHover: [{\n      type: Output\n    }],\n    buttonClicked: [{\n      type: Output\n    }],\n    click: [{\n      type: Output\n    }],\n    plotlyClick: [{\n      type: Output\n    }],\n    clickAnnotation: [{\n      type: Output\n    }],\n    deselect: [{\n      type: Output\n    }],\n    doubleClick: [{\n      type: Output\n    }],\n    framework: [{\n      type: Output\n    }],\n    hover: [{\n      type: Output\n    }],\n    legendClick: [{\n      type: Output\n    }],\n    legendDoubleClick: [{\n      type: Output\n    }],\n    react: [{\n      type: Output\n    }],\n    relayout: [{\n      type: Output\n    }],\n    relayouting: [{\n      type: Output\n    }],\n    restyle: [{\n      type: Output\n    }],\n    redraw: [{\n      type: Output\n    }],\n    selected: [{\n      type: Output\n    }],\n    selecting: [{\n      type: Output\n    }],\n    sliderChange: [{\n      type: Output\n    }],\n    sliderEnd: [{\n      type: Output\n    }],\n    sliderStart: [{\n      type: Output\n    }],\n    sunburstclick: [{\n      type: Output\n    }],\n    transitioning: [{\n      type: Output\n    }],\n    transitionInterrupted: [{\n      type: Output\n    }],\n    unhover: [{\n      type: Output\n    }],\n    treemapclick: [{\n      type: Output\n    }],\n    webglcontextlost: [{\n      type: Output\n    }]\n  });\n})();\nclass PlotlySharedModule {\n  constructor() {}\n}\nPlotlySharedModule.ɵfac = function PlotlySharedModule_Factory(t) {\n  return new (t || PlotlySharedModule)();\n};\nPlotlySharedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PlotlySharedModule,\n  declarations: [PlotlyComponent],\n  imports: [CommonModule],\n  exports: [PlotlyComponent]\n});\nPlotlySharedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [PlotlyService],\n  imports: [CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlySharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [PlotlyComponent],\n      imports: [CommonModule],\n      providers: [PlotlyService],\n      exports: [PlotlyComponent]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass PlotlyModule {\n  constructor() {\n    if (!this.isValid()) {\n      const msg = 'Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start' + ' to see how to add PlotlyJS to your project.';\n      throw new Error(msg);\n    }\n    PlotlyService.setPlotly(PlotlyModule.plotlyjs);\n  }\n  isValid() {\n    return PlotlyModule.plotlyjs !== undefined && (typeof PlotlyModule.plotlyjs.plot === 'function' || typeof PlotlyModule.plotlyjs.newPlot === 'function');\n  }\n}\nPlotlyModule.plotlyjs = {};\nPlotlyModule.ɵfac = function PlotlyModule_Factory(t) {\n  return new (t || PlotlyModule)();\n};\nPlotlyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PlotlyModule,\n  imports: [CommonModule, PlotlySharedModule],\n  exports: [PlotlySharedModule]\n});\nPlotlyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [PlotlyService],\n  imports: [CommonModule, PlotlySharedModule, PlotlySharedModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlyModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [],\n      imports: [CommonModule, PlotlySharedModule],\n      providers: [PlotlyService],\n      exports: [PlotlySharedModule]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass PlotlyViaCDNModule {\n  constructor(plotlyService) {\n    this.plotlyService = plotlyService;\n    PlotlyService.setModuleName('ViaCDN');\n  }\n  static setPlotlyVersion(version, cdnProvider = 'plotly', cdnURL = '') {\n    const isOk = version === 'latest' || /^(strict-)?\\d\\.\\d{1,2}\\.\\d{1,2}$/.test(version);\n    if (!isOk) {\n      throw new Error(`Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3) or strict version number (i.e.: strict-1.4.3)`);\n    }\n    PlotlyViaCDNModule.loadViaCDN(cdnProvider, cdnURL);\n    PlotlyViaCDNModule.plotlyVersion = version;\n  }\n  static setPlotlyBundle(bundle) {\n    const isOk = bundle === null || PlotlyViaCDNModule.plotlyBundleNames.indexOf(bundle) >= 0;\n    if (!isOk) {\n      const names = PlotlyViaCDNModule.plotlyBundleNames.map(n => `\"${n}\"`).join(', ');\n      throw new Error(`Invalid plotly bundle. Please set to null for full or ${names} for a partial bundle.`);\n    }\n    PlotlyViaCDNModule.plotlyBundle = bundle;\n  }\n  static loadViaCDN(cdnProvider = 'plotly', cdnURL = '') {\n    PlotlyService.setPlotly('waiting');\n    const init = () => {\n      let src = '';\n      switch (cdnProvider) {\n        case 'cloudflare':\n          if (PlotlyViaCDNModule.plotlyVersion == 'latest') {\n            throw new Error(`As cloudflare hosts version specific files, 'latest' as a version is not supported. Please specify a version or you can choose 'plotly' as a CDN provider.`);\n          }\n          src = PlotlyViaCDNModule.plotlyBundle == null ? `https://cdnjs.cloudflare.com/ajax/libs/plotly.js/${PlotlyViaCDNModule.plotlyVersion}/plotly.min.js` : `https://cdnjs.cloudflare.com/ajax/libs/plotly.js/${PlotlyViaCDNModule.plotlyVersion}/plotly-${PlotlyViaCDNModule.plotlyBundle}.min.js`;\n          break;\n        case 'custom':\n          if (!(!!cdnURL && typeof cdnURL === 'string')) {\n            throw new Error(`Invalid or missing CDN URL. Please provide a CDN URL in case of custom provider. Alternatively, you can choose from 'plotly' or 'cloudflare'.`);\n          }\n          src = cdnURL;\n          break;\n        default:\n          src = PlotlyViaCDNModule.plotlyBundle == null ? `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyVersion}.min.js` : `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyBundle}-${PlotlyViaCDNModule.plotlyVersion}.min.js`;\n          break;\n      }\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = src;\n      script.onerror = () => console.error(`Error loading plotly.js library from ${src}`);\n      const head = document.getElementsByTagName('head')[0];\n      head.appendChild(script);\n      let counter = 200; // equivalent of 10 seconds...\n      const fn = () => {\n        const plotly = window.Plotly;\n        if (plotly) {\n          PlotlyService.setPlotly(plotly);\n        } else if (counter > 0) {\n          counter--;\n          setTimeout(fn, 50);\n        } else {\n          throw new Error(`Error loading plotly.js library from ${src}. Timeout.`);\n        }\n      };\n      fn();\n    };\n    setTimeout(init);\n  }\n}\nPlotlyViaCDNModule.plotlyBundle = undefined;\nPlotlyViaCDNModule.plotlyVersion = 'latest';\nPlotlyViaCDNModule.plotlyBundleNames = ['basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox', 'finance'];\nPlotlyViaCDNModule.ɵfac = function PlotlyViaCDNModule_Factory(t) {\n  return new (t || PlotlyViaCDNModule)(i0.ɵɵinject(PlotlyService));\n};\nPlotlyViaCDNModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PlotlyViaCDNModule,\n  imports: [CommonModule, PlotlySharedModule],\n  exports: [PlotlySharedModule]\n});\nPlotlyViaCDNModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [PlotlyService],\n  imports: [CommonModule, PlotlySharedModule, PlotlySharedModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlyViaCDNModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [],\n      imports: [CommonModule, PlotlySharedModule],\n      providers: [PlotlyService],\n      exports: [PlotlySharedModule]\n    }]\n  }], function () {\n    return [{\n      type: PlotlyService\n    }];\n  }, null);\n})();\nclass PlotlyViaWindowModule {\n  constructor() {\n    const plotly = window.Plotly;\n    if (typeof plotly === 'undefined') {\n      throw new Error(`Plotly object not found on window.`);\n    }\n    PlotlyService.setPlotly(plotly);\n  }\n}\nPlotlyViaWindowModule.ɵfac = function PlotlyViaWindowModule_Factory(t) {\n  return new (t || PlotlyViaWindowModule)();\n};\nPlotlyViaWindowModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PlotlyViaWindowModule,\n  imports: [CommonModule, PlotlySharedModule],\n  exports: [PlotlySharedModule]\n});\nPlotlyViaWindowModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [PlotlyService],\n  imports: [CommonModule, PlotlySharedModule, PlotlySharedModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlotlyViaWindowModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [],\n      imports: [CommonModule, PlotlySharedModule],\n      providers: [PlotlyService],\n      exports: [PlotlySharedModule]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/*\n * Public API Surface of plotly\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PlotlyComponent, PlotlyModule, PlotlyService, PlotlySharedModule, PlotlyViaCDNModule, PlotlyViaWindowModule };\n"],
  "mappings": "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",
  "names": []
}
